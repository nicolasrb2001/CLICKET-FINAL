{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicor\\\\Documents\\\\GitHub\\\\clicket\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport LoginForm from \"./components/LoginForm\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Clubs from \"./components/clubs\";\nimport Banner from \"./components/Banner\";\nimport { updateName } from \"./ProfilesDB\";\nimport raw from './usernames.txt';\nimport { getZero } from \"./Zero\";\nimport { getSecondBridge } from \"./SecondBridge\";\nimport { getLabyrinth } from \"./Labyrinth\";\nimport { getScore } from \"./Score\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { MarketPlace } from \"./MarketPlace\";\nimport { Profile } from \"./Profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const adminUser = {\n    email: \"louis.godtfredsen@gmail.com\",\n    password: \"123\"\n  };\n  const prof = [{\n    username: \"Nico\",\n    ticketsBought: [{\n      _id: \"5b21ca3eeb7f6fbccd471815\",\n      club: \"ZeroZero\",\n      Day: \"05/03/2022\"\n    }]\n  }, {\n    username: \"Joe\",\n    ticketsBought: [{\n      _id: \"5b21ca3eeb7f6fbccd471815\",\n      club: \"Second Bridge\",\n      Day: \"06/03/2022\"\n    }]\n  }];\n  const [clubs, setclub] = useState[([{\n    _id: 0,\n    club: \"no selection\",\n    seller: {\n      _id: 0,\n      name: \"no selection\"\n    },\n    UserRating: 0,\n    Day: \"no selection\",\n    Price: \"0\"\n  }], getZero(), getSecondBridge(), getLabyrinth(), getScore())];\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [loggedin, setLoggedin] = useState({\n    loggedin: false\n  });\n  const [profiles, setProfile] = useState([{\n    username: \"\",\n    ticketsBought: [{\n      _id: \"0\",\n      club: \"no profile loaded\",\n      Day: \"no profile loaded\"\n    }]\n  }, {\n    username: \"Nico\",\n    ticketsBought: [{\n      _id: \"5b21ca3eeb7f6fbccd471815\",\n      club: \"ZeroZero\",\n      Day: \"05/03/2022\"\n    }]\n  }, {\n    username: \"Louis Raj Khullar Godtfredsen\",\n    ticketsBought: [{\n      _id: \"5b21ca3eeb7f6fbccd471815\",\n      club: \"Second Bridge\",\n      Day: \"06/03/2022\"\n    }]\n  }]);\n\n  const Login = details => {\n    localStorage.setItem(\"clubs\", clubs);\n    localStorage.setItem(\"prof\", prof);\n    console.log(\"trying\");\n    console.log(JSON.parse(localStorage.getItem(\"clubs\")));\n    console.log(\"done\");\n    Clubs.username = details.name;\n    localStorage.setItem(\"name\", details.name);\n\n    if (details.email === adminUser.email && details.password === adminUser.password) {\n      console.log(\"Logged in\");\n      setUser({\n        name: details.name,\n        email: details.email\n      });\n      setLoggedin({\n        loggedin: false\n      });\n    } else {\n      console.log(\"Details do not match\");\n      setError(\"Details do not match\");\n    }\n  };\n\n  const Logout = () => {\n    setUser({\n      name: \"\",\n      email: \"\"\n    });\n  };\n\n  const displayLogin = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: loggedin ? user.email !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n        Login: Login,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      setProfile: setProfile,\n      profiles: profiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      setProfile: setProfile,\n      profiles: profiles,\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        setProfile: setProfile,\n        profiles: profiles,\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/chats\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Hello this is the Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {\n            setProfile: setProfile,\n            profiles: profiles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/MarketPlace\",\n          element: /*#__PURE__*/_jsxDEV(MarketPlace, {\n            setProfile: setProfile,\n            profiles: profiles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: user.email !== \"\" ? /*#__PURE__*/_jsxDEV(MarketPlace, {\n            setProfile: setProfile,\n            profiles: profiles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login\",\n            children: /*#__PURE__*/_jsxDEV(LoginForm, {\n              Login: Login,\n              error: error,\n              setProfile: setProfile,\n              profiles: profiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"11f5Ier2TakICRX8SFFeh6+sgTY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/nicor/Documents/GitHub/clicket/src/App.jsx"],"names":["React","useState","LoginForm","Navbar","Clubs","Banner","updateName","raw","getZero","getSecondBridge","getLabyrinth","getScore","BrowserRouter","Router","Route","Routes","MarketPlace","Profile","App","adminUser","email","password","prof","username","ticketsBought","_id","club","Day","clubs","setclub","seller","name","UserRating","Price","user","setUser","error","setError","loggedin","setLoggedin","profiles","setProfile","Login","details","localStorage","setItem","console","log","JSON","parse","getItem","Logout","displayLogin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Clubs from \"./components/clubs\";\r\nimport Banner from \"./components/Banner\";\r\nimport {updateName} from \"./ProfilesDB\"\r\nimport raw from './usernames.txt';\r\nimport { getZero  } from \"./Zero\";\r\nimport { getSecondBridge} from \"./SecondBridge\";\r\nimport { getLabyrinth } from \"./Labyrinth\";\r\nimport { getScore} from \"./Score\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes,\r\n} from \"react-router-dom\";\r\nimport { MarketPlace } from \"./MarketPlace\";\r\nimport { Profile } from \"./Profile\";\r\n\r\n\r\nfunction App() {\r\n  \r\n\r\n  \r\n  const adminUser = {\r\n    email: \"louis.godtfredsen@gmail.com\",\r\n    password: \"123\", \r\n  };\r\n\r\n  const prof = [\r\n    {\r\n        username: \"Nico\",\r\n        \r\n        ticketsBought: [\r\n            {\r\n                _id: \"5b21ca3eeb7f6fbccd471815\",\r\n                club: \"ZeroZero\",\r\n                Day: \"05/03/2022\",\r\n              }\r\n        ]\r\n    },\r\n    {\r\n        username: \"Joe\",\r\n    \r\n        ticketsBought: [\r\n            {\r\n                _id: \"5b21ca3eeb7f6fbccd471815\",\r\n                club: \"Second Bridge\",\r\n                Day: \"06/03/2022\",\r\n              }\r\n        ]\r\n    }\r\n];\r\n  const [clubs,setclub]= useState[[{_id: 0, club: \"no selection\", seller: {_id: 0, name: \"no selection\"}, UserRating: 0, Day:\"no selection\", Price: \"0\"}],getZero(), getSecondBridge(),getLabyrinth(), getScore()];\r\n    \r\n  const [user, setUser] = useState({ name: \"\", email: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const[loggedin, setLoggedin] = useState({loggedin:false});\r\n  const [profiles, setProfile] = useState([\r\n    {\r\n        username: \"\",\r\n        \r\n        ticketsBought: [\r\n            {\r\n                _id: \"0\",\r\n                club: \"no profile loaded\",\r\n                Day: \"no profile loaded\",\r\n              }\r\n        ]\r\n    },\r\n    {\r\n        username: \"Nico\",\r\n        \r\n        ticketsBought: [\r\n            {\r\n                _id: \"5b21ca3eeb7f6fbccd471815\",\r\n                club: \"ZeroZero\",\r\n                Day: \"05/03/2022\",\r\n              }\r\n        ]\r\n    },\r\n    {\r\n        username: \"Louis Raj Khullar Godtfredsen\",\r\n    \r\n        ticketsBought: [\r\n            {\r\n                _id: \"5b21ca3eeb7f6fbccd471815\",\r\n                club: \"Second Bridge\",\r\n                Day: \"06/03/2022\",\r\n              }\r\n        ]\r\n    }\r\n  ]);\r\n  \r\n  const Login = (details) => {\r\n    localStorage.setItem(\"clubs\", clubs);\r\n    localStorage.setItem(\"prof\", prof);\r\n    console.log(\"trying\");\r\n    console.log(JSON.parse(localStorage.getItem(\"clubs\")));\r\n    console.log(\"done\");\r\n    Clubs.username = details.name;\r\n    localStorage.setItem(\"name\", details.name);\r\n  \r\n    if (\r\n      details.email === adminUser.email &&\r\n      details.password === adminUser.password\r\n    ) {\r\n      console.log(\"Logged in\");\r\n\r\n      setUser({\r\n        name: details.name,\r\n        email: details.email,\r\n      });\r\n\r\n      setLoggedin({\r\n        loggedin: false\r\n      });\r\n    } else {\r\n      console.log(\"Details do not match\");\r\n      setError(\"Details do not match\");\r\n    }\r\n  };\r\n\r\n  const Logout = () => {\r\n    setUser({ name: \"\", email: \"\" });\r\n  };\r\n\r\n  const displayLogin = () => {\r\n   \r\n\r\n      return(\r\n\r\n        \r\n        <div className='Login'>\r\n          {(loggedin) ? (\r\n            (user.email !== \"\") ? (\r\n              <div className='welcome'>\r\n                \r\n\r\n                <button onClick ={Logout}>Logout</button>\r\n              </div>\r\n            ): (\r\n              <LoginForm Login={Login} error={error}></LoginForm>\r\n            )\r\n          ) : (\r\n            null\r\n          )}\r\n                    \r\n                </div>\r\n\r\n      )\r\n\r\n  }\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        <Navbar setProfile = {setProfile} profiles = {profiles}></Navbar>\r\n\r\n        <Router setProfile= {setProfile} profiles = {profiles}>\r\n        \r\n            <Routes setProfile = {setProfile} profiles = {profiles}>\r\n            \r\n              <Route path=\"/chats\" element={<div>Hello this is the Chat</div>} />\r\n              <Route path=\"/profile\" element={<Profile setProfile = {setProfile} profiles = {profiles} />}/>\r\n\r\n              <Route path=\"/MarketPlace\" element={<MarketPlace setProfile = {setProfile} profiles = {profiles}></MarketPlace>}/>\r\n\r\n              <Route path=\"/\" element={\r\n              \r\n                (user.email !== \"\") ? (\r\n                  <MarketPlace setProfile = {setProfile} profiles = {profiles}></MarketPlace>\r\n\r\n                ): (\r\n                  <div className=\"Login\">\r\n                  <LoginForm Login={Login} error={error} setProfile = {setProfile} profiles = {profiles}></LoginForm>\r\n                  </div>\r\n                )}\r\n                \r\n                />\r\n\r\n                \r\n          </Routes>\r\n\r\n       </Router>\r\n      </div>\r\n        \r\n  );\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}